init_config:

# To notify on every service, set a list of notified uses here.
#
#    notify:
#        - user1@example.com
#        - pagerduty

instances:
#    -   name: My first service
#        url: http://some.url.example.com
#        timeout: 1

         # If your service uses basic authentication, you can optionally
         # specify a username and password that will be used in the check.
#        username: user
#        password: pass

         # The (optional) window and threshold parameters allow you to trigger
         # alerts only if the check fails x times within the last y attempts
         # where x is the threshold and y is the window.

#        threshold: 3
#        window: 5

         # The (optional) include_content parameter will instruct the check
         # to include the first 200 characters of the HTTP response body
         # in notifications sent by this plugin. This is best used with
         # "healthcheck"-type URLs, where the body contains a brief, human-
         # readable summary of failure reasons in the case of errors. This
         # defaults to false.

#        include_content: false

         # The (optional) http_method parameter will set the HTTP method
         # used by the http request.

#        http_method: GET

         # The (optional) http_boy parameter will set the HTTP request
         # content used by the http request. This is only useful in combination 
         # with http_method: POST or PUT.

#        http_body: none

         # The (optional) metrics_prefix parameter will set the metrics
         # name collected by the check with the given prefix.

#        metrics_prefix: network.http

         # The (optional) collect_metrics parameter will instruct the
         # check to create a metric '<metrics_prefix>.response_time' and
         # '<metrics_prefix>.response_code', tagged with
         # the url, reporting the response time in seconds and HTTP response code.

#        collect_metrics: true

         # The (optional) disable_ssl_validation will instruct the check
         # to skip the validation of the SSL certificate of the URL being tested.
         # This is mostly useful when checking SSL connections signed with
         # certificates that are not themselves signed by a public authority.
         # When true, the check logs a warning in collector.log

#        disable_ssl_validation: true

         # The (optional) headers parameter allows you to send extra headers
         # with the request. This is useful for explicitly specifying the host
         # header or perhaps adding headers for authorisation purposes. Note
         # that the http client library converts all headers to lowercase.
         # This is legal according to RFC2616
         # (See: http://tools.ietf.org/html/rfc2616#section-4.2)
         # but may be problematic with some HTTP servers
         # (See: https://code.google.com/p/httplib2/issues/detail?id=169)

#        headers:
#           Host: alternative.host.example.com
#           X-Auth-Token: SOME-AUTH-TOKEN

         # The (optional) skip_event parameter will instruct the check to not
         # create any event to avoid duplicates with a server side service check.
         # This default to False.

#        skip_event: false

#        tags:
#            - url:http://alternative.host.example.com
#            - env:production

#    -   name: My second service
#        url: https://another.url.example.com

         # For service-specific notifications, you can optionally specify
         # a list of users to notify within the service configuration.
#        notify:
#           - user2@example.com
#           - pagerduty
