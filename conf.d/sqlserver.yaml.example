init_config:
  #
  # By default, we only capture *some* of the metrics available in the
  # `sys.dm_os_performance_counters` table. You can easily add additional
  # metrics by following the custom_metrics structure shown below.
  #
  # In order to connect to SQL Server either enable SQL Authentication and
  # specify a username or password below. If you do not specify a username
  # or password then we will connect using integrated authentication.
  #
  # custom_metrics:

    # This is a basic custom metric. There is not instance associated with
    # this counter.
    #
    # - name: sqlserver.clr.execution
    #   counter_name: CLR Execution

    # This counter has multiple instances associated with it and we're
    # choosing to only fetch the 'Cumulative execution time (ms) per second' instance.
    #
    # - name: sqlserver.exec.in_progress
    #   counter_name: OLEDB calls
    #   instance_name: Cumulative execution time (ms) per second

    # This counter has multiple instances associated with it and we want
    # every instance available. We'll use the special case ALL instance
    # which *requires* a value for "tag_by". In this case, we'll get metrics
    # tagged as "db:mydb1", "db:mydb2".
    #
    # - name: sqlserver.db.commit_table_entries
    #   counter_name: Log Flushes/sec
    #   instance_name: ALL
    #   tag_by: db

  # As well as capturing from the DMV you can also capture from a custom proc
  # The proc should return this table
  # CREATE TABLE #Datadog
  # (
  # 	[metric] varchar(255) not null,
  # 	[type] varchar(50) not null,
  # 	[value] float not null,
  # 	[tags] varchar(255)
  # )
  # 
  # You can also specify:
  # ignore_missing_database : if DB doesn't exist then don't do the check
  # proc_only_if : run this SQL before each call to stored_procedure. If it returns 1 then call the proc
  # proc_only_if_database : the database to run the proc_only_if SQL in. Optional. 
  #                         Defaults to database attribute
  #
  # The only_if guard condition is useful for HA scenarios where a database can move between servers.
  
instances:
  - host: HOST,PORT
    username: my_username
    password: my_password
    # Optional, timeout in seconds for the connection and each command run
    # command_timeout: 30
    # database: my_database # Optional, defaults to "master"
    tags:
      - optional_tag

  - host: HOST,PORT
    database: MyDB
    stored_procedure: GetDatadogMetrics
    proc_only_if: SELECT CASE CONVERT(sysname,DatabasePropertyEx('MyDB','Updateability')) WHEN 'READ_WRITE' THEN 1 ELSE 0 END
    proc_only_if_database: master
    ignore_missing_database: True 
