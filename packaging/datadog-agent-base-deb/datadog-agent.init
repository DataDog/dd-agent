#!/bin/sh

### BEGIN INIT INFO
# Provides: dd-agent
# Short-Description: Start and start dd-agent
# Description: dd-agent is the monitoring Agent component for Datadog
# Required-Start: $remote_fs
# Required-Stop: $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
### END INIT INFO

. /lib/lsb/init-functions
PATH=$PATH:/sbin # add the location of start-stop-daemon on Debian

AGENTPATH="/usr/bin/dd-agent"
AGENTCONF="/etc/dd-agent/datadog.conf"
DOGSTATSDPATH="/usr/bin/dogstatsd"
AGENTUSER="dd-agent"
USE_SUPERVISOR="/usr/bin/dd-forwarder"
NAME="datadog-agent"
DESC="Datadog Agent"
DDAGENT_PID_PATH="/var/run/dd-agent"
SUPERVISOR_PIDFILE="/var/run/datadog-supervisord.pid"
SUPERVISOR_FILE="/etc/dd-agent/supervisor.conf"
SUPERVISOR_SOCK="/var/tmp/datadog-supervisor.sock"
SUPERVISORD="/usr/bin/supervisord"

# This script is considered a configuration file and will not be
# removed by dpkg unless the --purge option it set. Therefore we
# make sure that the Agent is actually installed before we try to do anything:
if [ ! -x $AGENTPATH ]; then
    echo "$AGENTPATH not found. Exiting."
    exit 0
fi

check_status() {
    if [ -f $USE_SUPERVISOR ]; then
        # If the socket exists, we can use supervisorctl
        if [ -e $SUPERVISOR_SOCK ]; then
            # If we're using supervisor, check the number of datadog processes
            # supervisor is currently controlling, and make sure that it's the
            # same as the number of programs specified in the supervisor config
            # file:

            supervisor_processes=$(supervisorctl -c $SUPERVISOR_FILE status)
            datadog_supervisor_processes=$(echo "$supervisor_processes" |
                                           grep -v pup |
                                           grep $NAME |
                                           grep -c RUNNING)
            supervisor_config_programs=$(grep -v pup $SUPERVISOR_FILE |
                                         grep -c '\[program:')

            if [ "$datadog_supervisor_processes" -ne "$supervisor_config_programs" ]; then
                echo "$supervisor_processes"
                echo "$DESC (supervisor) is NOT running all child processes"
                return 1
            else
                echo "$DESC (supervisor) is running all child processes"
                return 0
            fi
        else
            echo "$DESC (supervisor) is not running"
            return 1
        fi
    else
        # If we're not using supervisor, use the Agent and dogstatsd status
        # commands:

        su $AGENTUSER -c "$AGENTPATH status > /dev/null 2>&1"
        agent_exit_code=$?
        su $AGENTUSER -c "$DOGSTATSDPATH status > /dev/null 2>&1"
        dogstatsd_exit_code=$?
        if [ $agent_exit_code -eq 1 ] && [ $dogstatsd_exit_code -eq 1 ]; then
            echo "$DESC is NOT running all child processes"
            return 1
        else
            echo "$DESC is running all child processes"
            return 0
        fi
    fi
}

# Action to take
case "$1" in
    start)
        if [ ! -f $AGENTCONF ]; then
            echo "$AGENTCONF not found. Exiting."
            exit 3
        fi

        check_status > /dev/null
        if [ $? -eq 0 ]; then
            echo "$DESC is already running"
            exit 0
        fi

        if [ -f $USE_SUPERVISOR ]; then
            log_daemon_msg "Starting $DESC (using supervisord)" "$NAME"
            start-stop-daemon --start --quiet --oknodo --exec $SUPERVISORD -- -c $SUPERVISOR_FILE --pidfile $SUPERVISOR_PIDFILE
            if [ $? -ne 0 ]; then
                log_end_msg 1
            fi
        else
            log_daemon_msg "Starting $DESC" "$NAME"
            if [ ! -f $DDAGENT_PID_PATH ]; then
                mkdir -p $DDAGENT_PID_PATH
            fi
            chown $AGENTUSER $DDAGENT_PID_PATH
            su $AGENTUSER -c "env LANG=POSIX $AGENTPATH start init --clean > /dev/null 2>&1" && \
            su $AGENTUSER -c "env LANG=POSIX $DOGSTATSDPATH start > /dev/null 2>&1"
        fi

        sleep 4 # wait for the services to start up
        if check_status > /dev/null; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
        ;;
    stop)
        if [ -f $USE_SUPERVISOR ]; then
            log_daemon_msg "Stopping $DESC (stopping supervisord)" "$NAME"
            start-stop-daemon --stop --retry 30 --quiet --oknodo --pidfile $SUPERVISOR_PIDFILE
        else
            log_daemon_msg "Stopping $DESC" "$NAME"
            su $AGENTUSER -c "$AGENTPATH stop init > /dev/null 2>&1" && \
            su $AGENTUSER -c "$DOGSTATSDPATH stop > /dev/null 2>&1"
        fi

        log_end_msg $?

        ;;

    info)
        shift # Shift 'info' out of args so we can pass any
              # addtional options to the real command
              # (right now only dd-agent supports additional flags)
        su $AGENTUSER -c "$AGENTPATH info $@"
        RETURN_VALUE=$?
        su $AGENTUSER -c "$DOGSTATSDPATH info"
        RETURN_VALUE=$(($RETURN_VALUE || $?))
        if [ -f $USE_SUPERVISOR ]; then
            su $AGENTUSER -c "$USE_SUPERVISOR info"
            RETURN_VALUE=$(($RETURN_VALUE || $?))
        fi
        exit $RETURN_VALUE
        ;;

    status)
        check_status
        ;;

    restart|force-reload)
        $0 stop
        $0 start
        ;;
    *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|info|status}"
        exit 1
        ;;
esac

exit $?
