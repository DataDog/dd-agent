#!/bin/sh
###############################################################################
# datadog-agent
#
# Inspired by Boxed Ice <hello@boxedice.com>
# Forked by Datadog, Inc. <package@datadoghq.com>
#
# Licensed under Simplified BSD License (see LICENSE)
#
###############################################################################
#
# chkconfig: 345 85 15
# description: Datadog Monitoring Agent

### BEGIN INIT INFO
# Provides: datadog-agent
# Short-Description: Start and start datadog-agent
# Description: datadog-agent is the monitoring agent component for Datadog
# Required-Start:
# Required-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
### END INIT INFO

AGENTPATH="/usr/share/datadog/agent/agent.py"
AGENTUSER="dd-agent"
PIDPATH="/var/run/dd-agent/"
USE_SUPERVISOR="/usr/bin/dd-forwarder"
SUPERVISOR_CONF="/etc/dd-agent/supervisor.conf"

if [ -x "/usr/bin/python2.6" ]; then
    PYTHON="/usr/bin/python2.6"
else
    PYTHON="/usr/bin/python"
fi

# Source function library.
. /etc/rc.d/init.d/functions

PROG="datadog-agent"
PIDFILE=$PIDPATH/$PROG.pid
LOCKFILE=/var/lock/subsys/$PROG

check_status() {
    # run checks to determine if the service is running or use generic status
    if [ -f $USE_SUPERVISOR ]; then
	p=`supervisorctl -c $SUPERVISOR_CONF status | grep RUNNING | wc -l`
	if [ $p -eq 2 ]; then
            echo 'Datadog agent is running'
    	else
            echo 'Datadog agent is not running'
	fi  
    elif [ -f $LOCKFILE ]; then
            echo 'Datadog agent is running'
    else
            echo 'Datadog agent is not running'
    fi
}

grab_status() {
    GRABSTATUS=`check_status`
    if [ "$GRABSTATUS" == "Datadog agent is running" ]; then
        return 1
    else
        return 0
    fi
}

start() {
    if [ -f $USE_SUPERVISOR ]; then
        echo -n "Starting Datadog agent (using supervisorctl):"
        daemon --pidfile=/var/run/datadog-supervisord.pid supervisord -c $SUPERVISOR_CONF
        echo
        return 0
    else
        grab_status
        if [ "$?" -eq "1" ]; then
            echo -n 'Datadog agent is already running' && warning && echo
        else
            echo -n 'Starting Datadog agent: '
           	install -d -o $AGENTUSER $PIDPATH
            daemon --user $AGENTUSER "$PYTHON $AGENTPATH start init --clean >/dev/null"
            RETURNVALUE=$?
            echo
            [ $RETURNVALUE -eq 0 ] && touch $LOCKFILE
            return $RETURNVALUE
        fi
    fi
}

stop() {
    if [ -f $USE_SUPERVISOR ]; then
        echo -n 'Stopping Datadog agent (using supervisorctl): '
        killproc -p /var/run/datadog-supervisord.pid
        echo
        RETURNVALUE=0
    else
        grab_status
        if [ "$?" -eq "1" ]; then                
            echo -n 'Stopping Datadog agent: '
            daemon --user $AGENTUSER "$PYTHON $AGENTPATH stop >/dev/null"
            RETURNVALUE=$?
        	[ "$RETURNVALUE" -eq "0" ] && rm -f $LOCKFILE && rm -f $PIDFILE
        else
            echo -n 'agent is not running' && warning && echo
        	RETURNVALUE=2
        fi
    fi
    return $RETURNVALUE
}

restart() {
    stop
    start
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    status)
        check_status
        ;;
    *)
        echo "Usage: $0 {start|stop|restart}"
        exit 2
esac
exit $?
